// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: messages.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNKNOWN_TYPE  EventType = 0
	EventType_CONNECT       EventType = 1
	EventType_CONVERSATIONS EventType = 2
	EventType_MARK_AS_READ  EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "UNKNOWN_TYPE",
		1: "CONNECT",
		2: "CONVERSATIONS",
		3: "MARK_AS_READ",
	}
	EventType_value = map[string]int32{
		"UNKNOWN_TYPE":  0,
		"CONNECT":       1,
		"CONVERSATIONS": 2,
		"MARK_AS_READ":  3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type EventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event EventType `protobuf:"varint,1,opt,name=event,proto3,enum=kpoppop.messages.v1.EventType" json:"event,omitempty"`
	// Types that are assignable to Content:
	//
	//	*EventMessage_RespConnect
	//	*EventMessage_RespConvos
	//	*EventMessage_ReqRead
	//	*EventMessage_RespRead
	Content isEventMessage_Content `protobuf_oneof:"content"`
}

func (x *EventMessage) Reset() {
	*x = EventMessage{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessage) ProtoMessage() {}

func (x *EventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessage.ProtoReflect.Descriptor instead.
func (*EventMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *EventMessage) GetEvent() EventType {
	if x != nil {
		return x.Event
	}
	return EventType_UNKNOWN_TYPE
}

func (m *EventMessage) GetContent() isEventMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *EventMessage) GetRespConnect() *ContentConnectResponse {
	if x, ok := x.GetContent().(*EventMessage_RespConnect); ok {
		return x.RespConnect
	}
	return nil
}

func (x *EventMessage) GetRespConvos() *ContentConversationsResponse {
	if x, ok := x.GetContent().(*EventMessage_RespConvos); ok {
		return x.RespConvos
	}
	return nil
}

func (x *EventMessage) GetReqRead() *ContentMarkAsRead {
	if x, ok := x.GetContent().(*EventMessage_ReqRead); ok {
		return x.ReqRead
	}
	return nil
}

func (x *EventMessage) GetRespRead() *ContentMarkAsReadResponse {
	if x, ok := x.GetContent().(*EventMessage_RespRead); ok {
		return x.RespRead
	}
	return nil
}

type isEventMessage_Content interface {
	isEventMessage_Content()
}

type EventMessage_RespConnect struct {
	RespConnect *ContentConnectResponse `protobuf:"bytes,2,opt,name=resp_connect,json=respConnect,proto3,oneof"`
}

type EventMessage_RespConvos struct {
	RespConvos *ContentConversationsResponse `protobuf:"bytes,3,opt,name=resp_convos,json=respConvos,proto3,oneof"`
}

type EventMessage_ReqRead struct {
	ReqRead *ContentMarkAsRead `protobuf:"bytes,4,opt,name=req_read,json=reqRead,proto3,oneof"`
}

type EventMessage_RespRead struct {
	RespRead *ContentMarkAsReadResponse `protobuf:"bytes,5,opt,name=resp_read,json=respRead,proto3,oneof"`
}

func (*EventMessage_RespConnect) isEventMessage_Content() {}

func (*EventMessage_RespConvos) isEventMessage_Content() {}

func (*EventMessage_ReqRead) isEventMessage_Content() {}

func (*EventMessage_RespRead) isEventMessage_Content() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Convid    string  `protobuf:"bytes,1,opt,name=convid,proto3" json:"convid,omitempty"`
	To        int32   `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	From      int32   `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	Content   *string `protobuf:"bytes,4,opt,name=content,proto3,oneof" json:"content,omitempty"`
	CreatedAt string  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FromSelf  bool    `protobuf:"varint,6,opt,name=from_self,json=fromSelf,proto3" json:"from_self,omitempty"`
	Read      bool    `protobuf:"varint,7,opt,name=read,proto3" json:"read,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetConvid() string {
	if x != nil {
		return x.Convid
	}
	return ""
}

func (x *Message) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *Message) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *Message) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Message) GetFromSelf() bool {
	if x != nil {
		return x.FromSelf
	}
	return false
}

func (x *Message) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Convid      string     `protobuf:"bytes,2,opt,name=convid,proto3" json:"convid,omitempty"`
	Username    string     `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Displayname *string    `protobuf:"bytes,4,opt,name=displayname,proto3,oneof" json:"displayname,omitempty"`
	Photo       *string    `protobuf:"bytes,5,opt,name=photo,proto3,oneof" json:"photo,omitempty"`
	Status      string     `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Messages    []*Message `protobuf:"bytes,7,rep,name=messages,proto3" json:"messages,omitempty"`
	Unread      int32      `protobuf:"varint,8,opt,name=unread,proto3" json:"unread,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Conversation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Conversation) GetConvid() string {
	if x != nil {
		return x.Convid
	}
	return ""
}

func (x *Conversation) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Conversation) GetDisplayname() string {
	if x != nil && x.Displayname != nil {
		return *x.Displayname
	}
	return ""
}

func (x *Conversation) GetPhoto() string {
	if x != nil && x.Photo != nil {
		return *x.Photo
	}
	return ""
}

func (x *Conversation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Conversation) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Conversation) GetUnread() int32 {
	if x != nil {
		return x.Unread
	}
	return 0
}

type ContentConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ContentConnectResponse) Reset() {
	*x = ContentConnectResponse{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentConnectResponse) ProtoMessage() {}

func (x *ContentConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentConnectResponse.ProtoReflect.Descriptor instead.
func (*ContentConnectResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ContentConnectResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ContentConversationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversations []*Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
}

func (x *ContentConversationsResponse) Reset() {
	*x = ContentConversationsResponse{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentConversationsResponse) ProtoMessage() {}

func (x *ContentConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentConversationsResponse.ProtoReflect.Descriptor instead.
func (*ContentConversationsResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *ContentConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type ContentMarkAsRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Convid string `protobuf:"bytes,1,opt,name=convid,proto3" json:"convid,omitempty"` // Conversation ID
	To     int32  `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`        // Recipient ID
}

func (x *ContentMarkAsRead) Reset() {
	*x = ContentMarkAsRead{}
	mi := &file_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentMarkAsRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMarkAsRead) ProtoMessage() {}

func (x *ContentMarkAsRead) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMarkAsRead.ProtoReflect.Descriptor instead.
func (*ContentMarkAsRead) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *ContentMarkAsRead) GetConvid() string {
	if x != nil {
		return x.Convid
	}
	return ""
}

func (x *ContentMarkAsRead) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

type ContentMarkAsReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Convid string `protobuf:"bytes,1,opt,name=convid,proto3" json:"convid,omitempty"`  // Conversation ID
	To     int32  `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`         // Recipient ID
	Unread int32  `protobuf:"varint,3,opt,name=unread,proto3" json:"unread,omitempty"` // Number of unread messages remaining
	Read   bool   `protobuf:"varint,4,opt,name=read,proto3" json:"read,omitempty"`     // Whether the messages are marked as read
}

func (x *ContentMarkAsReadResponse) Reset() {
	*x = ContentMarkAsReadResponse{}
	mi := &file_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentMarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMarkAsReadResponse) ProtoMessage() {}

func (x *ContentMarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*ContentMarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *ContentMarkAsReadResponse) GetConvid() string {
	if x != nil {
		return x.Convid
	}
	return ""
}

func (x *ContentMarkAsReadResponse) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ContentMarkAsReadResponse) GetUnread() int32 {
	if x != nil {
		return x.Unread
	}
	return 0
}

func (x *ContentMarkAsReadResponse) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x8b, 0x03, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x54,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x43, 0x6f,
	0x6e, 0x76, 0x6f, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x52, 0x65, 0x61, 0x64, 0x12, 0x4d, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b,
	0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x52, 0x65, 0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f,
	0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b,
	0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3b,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x19, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x76,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x76, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x2a, 0x4f, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x56,
	0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x41, 0x52, 0x4b, 0x5f, 0x41, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x03, 0x42, 0x31, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x61,
	0x73, 0x74, 0x65, 0x61, 0x2f, 0x6b, 0x70, 0x6f, 0x70, 0x70, 0x6f, 0x70, 0x2d, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x69, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x3b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_messages_proto_goTypes = []any{
	(EventType)(0),                       // 0: kpoppop.messages.v1.EventType
	(*EventMessage)(nil),                 // 1: kpoppop.messages.v1.EventMessage
	(*Message)(nil),                      // 2: kpoppop.messages.v1.Message
	(*Conversation)(nil),                 // 3: kpoppop.messages.v1.Conversation
	(*ContentConnectResponse)(nil),       // 4: kpoppop.messages.v1.ContentConnectResponse
	(*ContentConversationsResponse)(nil), // 5: kpoppop.messages.v1.ContentConversationsResponse
	(*ContentMarkAsRead)(nil),            // 6: kpoppop.messages.v1.ContentMarkAsRead
	(*ContentMarkAsReadResponse)(nil),    // 7: kpoppop.messages.v1.ContentMarkAsReadResponse
}
var file_messages_proto_depIdxs = []int32{
	0, // 0: kpoppop.messages.v1.EventMessage.event:type_name -> kpoppop.messages.v1.EventType
	4, // 1: kpoppop.messages.v1.EventMessage.resp_connect:type_name -> kpoppop.messages.v1.ContentConnectResponse
	5, // 2: kpoppop.messages.v1.EventMessage.resp_convos:type_name -> kpoppop.messages.v1.ContentConversationsResponse
	6, // 3: kpoppop.messages.v1.EventMessage.req_read:type_name -> kpoppop.messages.v1.ContentMarkAsRead
	7, // 4: kpoppop.messages.v1.EventMessage.resp_read:type_name -> kpoppop.messages.v1.ContentMarkAsReadResponse
	2, // 5: kpoppop.messages.v1.Conversation.messages:type_name -> kpoppop.messages.v1.Message
	3, // 6: kpoppop.messages.v1.ContentConversationsResponse.conversations:type_name -> kpoppop.messages.v1.Conversation
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*EventMessage_RespConnect)(nil),
		(*EventMessage_RespConvos)(nil),
		(*EventMessage_ReqRead)(nil),
		(*EventMessage_RespRead)(nil),
	}
	file_messages_proto_msgTypes[1].OneofWrappers = []any{}
	file_messages_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
